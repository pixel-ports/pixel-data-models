{
  "$schema": "http://json-schema.org/schema#",
  "$id": "https://gitpixel.satrdlab.upv.es/marc.despland/DataModels/src/master/DataModels/Pixel/Hopu/NoiseLevelObserved/schema.json",
  "title": "FIWARE - Noise / NoiseLevelObserved  HOPU data model for the purpose of PIXEL project",
  "description": "An observation of those acoustic parameters that estimate noise pressure levels at a certain place and time. ",
  "type": "object",
  "allOf": [
    {
      "$ref": "https://fiware.github.io/data-models/common-schema.json#/definitions/GSMA-Commons"
    },
    {
      "$ref": "https://fiware.github.io/data-models/common-schema.json#/definitions/Location-Commons"
    },
    {
      "properties": {
        "type": {
          "type": "string",
          "enum": ["NoiseLevelObserved"],
          "description": "NGSI Entity type"
        },
        "dateObserved": {
          "type": "string"
        },
        "operationalStatus": {
          "type": "string"
        },
        "dateObservedFrom": {
          "type": "string",
          "format": "date-time"
        },
        "TimeInstant": {
          "type": "string",
          "format": "date-time"
        },
        "dateObservedTo": {
          "type": "string",
          "format": "date-time"
        },
        "sonometerClass": {
          "type": "string",
          "enum": ["0", "1", "2"]
        },
		"period": {
           "type": "Number"
        },
        "LA1": {
           "type": "number"
        },
        "LA10": {
           "type": "number"
        },
        "LA50": {
           "type": "number"
        },
        "LA90": {
           "type": "number"
        },
        "LA99": {
           "type": "number"
        },
        "LAFmax": {
           "type": "number"
        },
        "LAFmin": {
           "type": "number"
        },
        "LASmax": {
           "type": "number"
        },
        "LASmin": {
           "type": "number"
        },
        "LAeq": {
           "type": "number"
        },
        "LAmax": {
           "type": "number"
        },
        "LAmin": {
           "type": "number"
        },                         
        "frequencies": {
          "properties": {
            "100": {
              "type": "integer"
            },
            "125": {
              "type": "integer"
            },
            "160": {
              "type": "integer"
            },
            "200": {
              "type": "integer"
            },
            "250": {
              "type": "integer"
            },
            "315": {
              "type": "integer"
            },
            "400": {
              "type": "integer"
            },
            "500": {
              "type": "integer"
            },
            "630": {
              "type": "integer"
            },
            "800": {
              "type": "integer"
            },
            "1000": {
              "type": "integer"
            },
            "1250": {
              "type": "integer"
            },
            "1600": {
              "type": "integer"
            },
            "2000": {
              "type": "integer"
            },
            "2500": {
              "type": "integer"
            },
            "3150": {
              "type": "integer"
            },
            "4000": {
              "type": "integer"
            },
            "8000": {
              "type": "integer"
            },
            "10000": {
              "type": "integer"
            }
          },
          "type": "object",
          "required": []
        },
        "refDevice": {
          "$ref": "https://fiware.github.io/data-models/common-schema.json#/definitions/EntityIdentifierType"
        },
        "refPointOfInterest": {
          "$ref": "https://fiware.github.io/data-models/common-schema.json#/definitions/EntityIdentifierType"
        },
        "refWeatherObserved": {
          "$ref": "https://fiware.github.io/data-models/common-schema.json#/definitions/EntityIdentifierType"
        }
      }
    }
  ],
  "required": ["id", "type", "dateObservedFrom", "dateObservedTo", "location"]
}